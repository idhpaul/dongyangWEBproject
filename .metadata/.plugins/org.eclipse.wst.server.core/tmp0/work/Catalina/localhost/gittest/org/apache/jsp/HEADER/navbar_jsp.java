/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2018-11-28 02:07:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.HEADER;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class navbar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" <!-- 이 jsp 문서는 상단의 네비게이션 바를 따로 분리해놓은 문서입니다. navbar의 로그인 작용과 같은 작업들은 이쪽에서 진행을 해주시면 됩니다-->\r\n");
      out.write("\r\n");
 
	//네비게이션바 절대경로 설정
	String path = "/gittest/"; 
  
	//로그인 확인 변수
	String userId = (String)session.getAttribute("userId");

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<nav class=\"navbar navbar-inverse navbar-fixed-top\">\r\n");
      out.write("\t  <div class=\"container-fluid\">\r\n");
      out.write("\t    <div class=\"navbar-header\">\r\n");
      out.write("\t        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("\t        <!-- 모바일 사이즈로 작아졌을때 메누바에 표시할 메뉴 바 -->\r\n");
      out.write("\t          <span class=\"icon-bar\"></span>\r\n");
      out.write("\t          <span class=\"icon-bar\"></span>\r\n");
      out.write("\t          <span class=\"icon-bar\"></span>                        \r\n");
      out.write("\t      </button>\r\n");
      out.write("\t      <a class=\"navbar-brand\" href=\"");
      out.print(path );
      out.write("index.jsp\">동양도서관</a>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div>\r\n");
      out.write("\t      <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("\t        <ul class=\"nav navbar-nav\">\r\n");
      out.write("\t        <!-- 여기 메인페이지 드랍아운 부분 ul 안쪽에 li를 추가하면 메뉴항목 늘어남 -->\r\n");
      out.write("\t          <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">도서관 소개 <span class=\"caret\"></span></a>\r\n");
      out.write("\t            <ul class=\"dropdown-menu\">\r\n");
      out.write("\t              <li><a href= \"");
      out.print(path );
      out.write("index.jsp#section41\">도거관 소개</a></li>\r\n");
      out.write("\t              <li><a href=\"");
      out.print(path );
      out.write("index.jsp#section42\">이달의 추천 도서</a></li>\r\n");
      out.write("\t            </ul>\r\n");
      out.write("\t          </li>\r\n");
      out.write("\t          <li class = \"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">소통의 광장 <span class=\"caret\"></span></a>\r\n");
      out.write("\t          \t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t          \t\t<!-- 희망도서 신청 : 자기가 신청한 내용만 확인가능 -->\r\n");
      out.write("\t          \t\t<li><a href= \"");
      out.print(path );
      out.write("libnotice.jsp?page=request\">희망도서 신청</a></li>\r\n");
      out.write("\t          \t\t<!-- 문의 사항 :자기가 문의한 내용만 확인 가능 -->\r\n");
      out.write("\t          \t\t<li><a href= \"");
      out.print(path );
      out.write("libnotice.jsp?page=faq\">문의 사항</a></li>\r\n");
      out.write("\t          \t</ul>\r\n");
      out.write("\t          </li>\r\n");
      out.write("\t          <li>\r\n");
      out.write("\t          \t<a href = \"");
      out.print(path );
      out.write("libprocessor.jsp\">도서관 이용</a>\r\n");
      out.write("\t          </li>\r\n");
      out.write("\t          <!-- 새로 메뉴에 새로훈 항목을 추가할떄는 이쪽 -->\r\n");
      out.write("\t          <!-- \r\n");
      out.write("\t\t          <li><a href = \"#\">메뉴이름</li> <ㅡ 이런형태로 추가하면 늘어남\r\n");
      out.write("\t           -->\r\n");
      out.write("\t        </ul>\r\n");
      out.write("\t        <!-- 로그인 구현 페이지 후에 아이디를 접속했을때 저부분이 다바뀌어 다 로그인 했을떄로 보여지게 구연할 예정 -->\r\n");
      out.write("\t        ");
 if(userId == null){ 
      out.write("\r\n");
      out.write("\t        \t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t<a href='#' class =\"dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\taria-expanded=\"false\">접속하기<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href = \"");
      out.print(path );
      out.write("LOGIN/login.jsp\">로그인</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href = \"");
      out.print(path );
      out.write("LOGIN/join.jsp\">회원가입</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("      \t\t\t\t<li><p class=\"navbar-text\">");
      out.print(userId );
      out.write("님 반갑습니다.</p></li>\r\n");
      out.write("      \t\t\t\t<li><a href=\"");
      out.print(path );
      out.write("LOGIN/logout.jsp\"><span class=\"glyphicon glyphicon-log-in\"></span>Logout</a></li>\r\n");
      out.write("   \t\t\t\t</ul>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
